{"version":3,"sources":["components/Header.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/SortList.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","actions.js","constants.js","components/Content.js","containers/About.js","serviceWorker.js","reducers.js","index.js"],"names":["Header","className","to","title","Card","props","src","id","alt","name","email","CardList","robots","map","rob","i","key","SearchBox","onSearchField","htmlFor","type","placeholder","onChange","SortList","onSortField","value","Scroll","style","overflowY","height","border","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","requestRobots","searchField","sortField","onHandleSearch","onHandleSort","isPending","sorted","filter","robo","toLowerCase","includes","sort","a","b","React","connect","searchRobots","dispatch","event","payload","target","fetch","then","response","json","users","catch","Content","About","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","initialStateSearch","initialStateRobots","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunk","ReactDOM","render","path","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.94c44b46.chunk.js","sourcesContent":["import React from 'react';\nimport { \n  Link\n} from \"react-router-dom\";\n\nconst Header = () => {\n\treturn (\n\t\t<nav className=\"pa3 pa4-ns helvetica\">\n\t\t  <Link to=\"/\" className=\"link dim f-headline-ns tc db mb3 mb4-ns\"><h1 className=\"f1\">RoboFriends</h1></Link>\n\t\t  <div className=\"tc pb3\">\t\t   \n\t\t    <Link to=\"/\" className=\"link dim b hot-pink f6 f5-ns dib mr3\">HOME</Link>\n\t\t    <Link to=\"/about\" className=\"link dim b hot-pink f6 f5-ns dib mr3\" title=\"About\">ABOUT</Link>\t\t    \n\t\t    <Link to=\"/contact\" className=\"link dim b hot-pink f6 f5-ns dib\" title=\"Contact\">CONTACT</Link>\n\t\t  </div>\n\t\t</nav>\n\t)\n}\n\nexport default Header;","import React from 'react';\n\nconst Card = (props) => {\n\treturn (\n\t\t<div className=\"dib bg-light-green tc bw2 b--green pa3 ma2 br2 grow shadow-2\"> \n\t\t\t<img src={`https://robohash.org/${props.id}?200*200`} alt=\"robots\"/>\n\t\t\t<div>\n\t\t\t\t<h2> {props.name} </h2>\n\t\t\t\t<p> {props.email}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList = ({robots}) =>{\t\n\treturn(\n\t\t<div>{\n\t\t\trobots.map((rob, i) => {\n\t\t\t\treturn <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\t\t\t\t\n\t\t\t})\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default CardList;","import React from 'react';\n\n\nconst SearchBox = ({onSearchField}) => {\n\treturn (\n\t\t<div className=\"ma2 pa2\"> \n\t\t\t<label htmlFor=\"searchbx\">Search with : </label>\n\t\t\t<input id=\"searchbx\"\n\t\t\ttype=\"search\" \n\t\t\tclassName=\"pa2 bg-lightest-blue ba b--green\" \n\t\t\tplaceholder=\"Search Robots..\"\n\t\t\tonChange={onSearchField}\n\t\t\t/>\t\t\t\n\t\t</div>\n\t\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst SortList = ({onSortField}) => {\n\treturn (\n\t\t<div className=\"ma2 pa2\">\n\t\t<label htmlFor=\"sortby\">Sortby : </label>\n\t\t<select onChange={onSortField} className=\"pa2 bg-lightest-blue ba b--green\" id=\"sortby\">\n\t\t\t<option value=\"\">-- Default Sort --</option>\n\t\t\t<option value=\"name\">By Name</option>\n\t\t\t<option value=\"id\">By ID</option>\n\t\t</select>\n\t\t</div>\n\t\t);\n}\n\n\nexport default SortList;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{overflowY:'scroll', height:'500px',border : '5px solid blue'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t\t);\n}\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundary extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t}\n\t}\n\n\tcomponentDidCatch(error, info){\t\t\n\t\tthis.setState({hasError: true});\n\t}\n\n\trender(){\n\t\treturn (this.state.hasError)? <h1>OOOPS, There is an error to load..</h1> : this.props.children;\n\t}\n}\nexport default ErrorBoundary;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setSearchField, setSortField,  requestRobots} from '../actions';\n\nimport CardList from '../components/CardList';\n// import { robots } from './robots';\nimport SearchBox from '../components/SearchBox';\nimport SortList from '../components/SortList';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\n\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tsearchField: state.searchRobots.searchField,\n\t\tsortField: state.searchRobots.sortField,\n\t\tisPending: state.requestRobots.isPending,\n\t\trobots: state.requestRobots.robots\n\t} \n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonHandleSearch: (event) => dispatch(setSearchField(event.target.value)),\n\t\tonHandleSort: (event) => dispatch(setSortField(event.target.value)),\n\t\trequestRobots: () => dispatch(requestRobots())\n\t}\n}\n\nclass App extends React.Component{\n\tcomponentDidMount(){\n\t\tthis.props.requestRobots();\n\t}\n\n\trender(){\n\t\tconst {searchField, sortField, onHandleSearch, onHandleSort, isPending, robots} = this.props;\n\n\t\tconst filteredRobot = robots.filter((robo) => \n\t\t\t\t{\n\t\t\t\t\treturn robo.name.toLowerCase().includes(searchField.toLowerCase());\n\t\t\t\t}\n\t\t\t);\n\n\t\tconst sorted = filteredRobot.sort(function(a, b){\t\t\n\t\t\tif(sortField === 'id'){ \n\t\t\t\treturn a.id-b.id;\n\t\t\t}else if(sortField === 'name'){ \n\t\t\t\treturn (a.name < b.name)? -1: 1;\n\t\t\t}else{ return b.id-a.id;}\n\t\t});\n\n\t\treturn (isPending)? <h1 className=\"f1 tc\">LOADING...</h1>:\n\t\t\t(\n\t\t\t\t<div className=\"tc helvetica\"> \n\t\t\t\t\t<div className=\"mw9 center ph3-ns\">\n\t\t\t\t\t  <div className=\"cf ph2-ns\">\n\t\t\t\t\t    <div className=\"fl w-100 w-25-ns pa2\">\n\t\t\t\t\t    </div>\n\t\t\t\t\t    <div className=\"fl w-100 w-25-ns pa2\">\n\t\t\t\t\t    \t<SearchBox onSearchField={onHandleSearch}/>\n\t\t\t\t\t    </div>\n\t\t\t\t\t    <div className=\"fl w-100 w-25-ns pa2\">\n\t\t\t\t\t    \t<SortList onSortField={onHandleSort} />\n\t\t\t\t\t    </div>\n\t\t\t\t\t    <div className=\"fl w-100 w-25-ns pa2\">\t\t\t\t\t      \n\t\t\t\t\t    </div>\n\t\t\t\t\t  </div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Scroll>\t\n\t\t\t\t\t\t<ErrorBoundary>\t\t\t\n\t\t\t\t\t\t\t<CardList robots={sorted} />\n\t\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t</Scroll>\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t);\n\t\t\n\t}\n\t\n};\n\n// action done from mapDispatchToProps will channge state from mapStateToProps\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import {CHANGE_SEARCH_FIELD,\n\t\tCHANGE_SORT_FIELD,\n\t\tREQUEST_ROBOTS_PENDING,\n\t\tREQUEST_ROBOTS_SUCCESS,\n\t\tREQUEST_ROBOTS_ERROR\n\t} from './constants';\n\nexport const setSearchField = (text) => {\t\n\treturn { \n\t\ttype: CHANGE_SEARCH_FIELD,\n\t\tpayload: text\n\t}\n}\nexport const setSortField = (opval) => {\t\n\treturn {\n\t\ttype: CHANGE_SORT_FIELD,\n\t\tpayload: opval\n\t}\n}\n\nexport const requestRobots = () => (dispatch) => {\n\tdispatch({type : REQUEST_ROBOTS_PENDING});\n\tfetch(\"https://jsonplaceholder.typicode.com/users/\")\n\t\t.then(response => response.json())\n\t\t.then(users =>  dispatch({type: REQUEST_ROBOTS_SUCCESS, payload: users}) )\n\t\t.catch(error => dispatch({type: REQUEST_ROBOTS_ERROR, payload: error}));\n}","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\nexport const CHANGE_SORT_FIELD = 'CHANGE_SORT_FIELD';\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_ERROR = 'REQUEST_ROBOTS_ERROR';\n","import React from 'react';\n\nconst Content = (props) => {\n\treturn (\n\t\t<article className=\"pa3 pa5-ns tl\"> \n\t\t  <p className=\"measure lh-copy light-green\">\n\t\t    Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod\n\t\t    tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At\n\t\t    vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren,\n\t\t    no sea takimata sanctus est Lorem ipsum dolor sit amet.\n\t\t  </p>\n\t\t  <p className=\"measure lh-copy light-green\">\n\t\t    Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod\n\t\t    tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At\n\t\t    vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren,\n\t\t    no sea takimata sanctus est Lorem ipsum dolor sit amet.\n\t\t  </p>\n\t\t  <p className=\"measure lh-copy light-green\">\n\t\t    Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod\n\t\t    tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At\n\t\t    vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren,\n\t\t    no sea takimata sanctus est Lorem ipsum dolor sit amet.\n\t\t  </p>\n\t\t  <p className=\"measure lh-copy light-green\">\n\t\t    Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod\n\t\t    tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At\n\t\t    vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren,\n\t\t    no sea takimata sanctus est Lorem ipsum dolor sit amet.\n\t\t  </p>\n\t\t  <p className=\"measure lh-copy light-green\">\n\t\t    The passage experienced a surge in popularity during the 1960s when Letraset used \n\t\t    it on their dry-transfer sheets, and again during the 90s as desktop publishers bundled the text with their software. \n\t\t    Today it's seen all around the web; on templates, websites, and stock designs. Use our generator to get your own, or read on for the authoritative history of lorem ipsum.\n\t\t  </p>\n\t\t  <p className=\"measure lh-copy light-green\">\n\t\t    Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod\n\t\t    tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At\n\t\t    vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren,\n\t\t    no sea takimata sanctus est Lorem ipsum dolor sit amet.\n\t\t  </p>\n\t\t</article>\n\t);\n}\n\nexport default Content;\n\n\n","import React from 'react';\nimport Scroll from '../components/Scroll';\nimport Content from '../components/Content';\nimport './About.css';\n\nclass About extends React.Component{\n\trender(){\t\n\t\treturn (\n\t\t\t<div className=\"tc helvetica\"> \n\t\t\t\t<h2 className=\"f3 f2-m f1-l light-green\">ABOUT ROBO</h2>\t\t\t\t\n\t\t\t\t<Scroll>\t\n\t\t\t\t\t<Content/>\n\t\t\t\t</Scroll>\t\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t\t\n\t}\n\t\n};\n\nexport default About","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {CHANGE_SEARCH_FIELD,\n\t\tCHANGE_SORT_FIELD,\n\t\tREQUEST_ROBOTS_PENDING,\n\t\tREQUEST_ROBOTS_SUCCESS,\n\t\tREQUEST_ROBOTS_ERROR\n\t} from './constants';\n\nconst initialStateSearch = {\n\tsearchField: '',\n\tsortField: ''\n};\n\nexport const searchRobots = (state=initialStateSearch, action={}) => {\n\tswitch(action.type){\n\t\tcase CHANGE_SEARCH_FIELD:\n\t\t\treturn Object.assign({}, state, {searchField: action.payload})\n\t\t\t//return {...state, searchField: action.payload}\n\t\tcase CHANGE_SORT_FIELD:\n\t\t\treturn Object.assign({}, state, {sortField: action.payload})\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nconst initialStateRobots = {\n\tisPending: false,\n\trobots: [],\n\terror: ''\n};\n\nexport const requestRobots = (state=initialStateRobots, action={}) => {\n\tswitch(action.type){\n\t\tcase REQUEST_ROBOTS_PENDING:\n\t\t\treturn Object.assign({}, state, {isPending: true})\n\t\tcase REQUEST_ROBOTS_SUCCESS:\n\t\t\treturn Object.assign({}, state, {robots: action.payload, isPending: false})\n\t\tcase REQUEST_ROBOTS_ERROR:\n\t\t\treturn Object.assign({}, state, {error: action.payload})\n\t\tdefault:\n\t\t\treturn state\n\t}\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport {Provider} from 'react-redux';\n//import {createLogger} from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport './index.css';\nimport 'tachyons';\nimport Header from './components/Header';\nimport App from './containers/App';\nimport About from './containers/About';\nimport * as serviceWorker from './serviceWorker';\nimport { requestRobots, searchRobots } from './reducers'\n\nconst rootReducer = combineReducers({searchRobots, requestRobots});\n\n//const logger = createLogger();\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n\t<Provider store={store}>\n\t<Router>\n\t  <div>\n\t  \t<Header/>\n\t    <Switch>\n\t      <Route path=\"/about\">\n\t        <About />\n\t      </Route>\n\t      <Route path=\"/contact\">\n\t       \t<h2 className=\"tc f3 f2-m f1-l light-green\">CONTACT US</h2>\n\t      </Route>\n\t      <Route path=\"/\">\n\t        <App />\n\t      </Route>\n\t    </Switch>\n\t  </div>\n\t</Router>\n\t</Provider>,\n\tdocument.getElementById('root')\n\t);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n\n"],"sourceRoot":""}